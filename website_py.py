# -*- coding: utf-8 -*-
"""website.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IiLywyZeVzhH545HIsO5AmMHIVWsbx-p
"""

import streamlit as st
import pandas as pd
import joblib

# Load your trained model
model = joblib.load("burnout_model.pkl")

# Page config
st.set_page_config(page_title="Student Burnout Predictor", layout="centered")
st.title("ðŸŽ“ Student Burnout Level Prediction")
st.write("Fill in the details below to predict the burnout level.")

# Input fields
study_hours = st.number_input("ðŸ“˜ Study Hours per Day", min_value=0, max_value=24, value=5)
sleep_hours = st.number_input("ðŸ’¤ Sleep Hours per Day", min_value=0, max_value=24, value=7)
stress_level = st.slider("âš¡ Stress Level (1-10)", 1, 10, 5)
attendance = st.number_input("ðŸ“Š Attendance (%)", min_value=0, max_value=100, value=85)

# Predict button
if st.button("ðŸ”® Predict Burnout Level"):
    # Prepare input for model
    X_new = pd.DataFrame([[study_hours, sleep_hours, stress_level, attendance]],
                         columns=['study_hours','sleep_hours','stress_level','attendance'])

    # Make prediction
    prediction = model.predict(X_new)[0]
    probability = model.predict_proba(X_new).max()

    # Display result
    st.subheader("ðŸ“Œ Prediction Result")
    st.success(f"Predicted Burnout Level: *{prediction}*")
    st.info(f"Confidence: {probability:.2f}")

    # Extra: Show explanation
    if prediction == "Low":
        st.write("âœ… You are at a *low risk* of burnout. Keep maintaining balance between study and rest!")
    elif prediction == "Medium":
        st.write("âš  You are at a *moderate risk* of burnout. Try reducing stress and improving sleep.")
    else:
        st.write("ðŸš¨ You are at a *high risk* of burnout. Consider taking breaks, seeking support, and managing workload.")